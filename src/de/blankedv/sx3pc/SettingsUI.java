/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SettingsUI.java
 *
 * Created on 20.04.2011, 07:17:22
 */

package de.blankedv.sx3pc;

import java.util.ResourceBundle;
import java.util.Locale;
import javax.swing.JOptionPane;
import gnu.io.CommPortIdentifier;
import java.util.Enumeration;
import java.util.prefs.Preferences;
import static de.blankedv.sx3pc.InterfaceUI.*;

/**
 *
 * @author mblank
 */
public class SettingsUI extends javax.swing.JFrame {
    private Preferences prefs = Preferences.userNodeForPackage(this.getClass());

    /** Creates new form SettingsUI */
    public SettingsUI() {
        initComponents();

        refreshSerialPortList();

        String ifType = prefs.get("type", "SLX 825");        
        String baudStr = prefs.get("baudrate","9600");
        String busmode = prefs.get("busmode", "SX");
                
        for (int i=0; i<comboSelectType.getItemCount();i++) {
            //if (DEBUG) { System.out.println("geladen Type-String="+ 
                   // comboSelectType.getItemAt(i).toString() + " typePrefs="+ifType+"."); }
            if (comboSelectType.getItemAt(i).toString().equalsIgnoreCase(ifType)) {
                comboSelectType.setSelectedIndex(i);
              //  System.out.println("found "+i);
                break;
            }                
        }
        for (int i=0; i<cbBaudrate.getItemCount();i++) {
            if (cbBaudrate.getItemAt(i).toString().equalsIgnoreCase(baudStr)) {
                cbBaudrate.setSelectedIndex(i);
                break;
            }                
        }
        for (int i=0; i<comboBusmode.getItemCount();i++) {
            if (comboBusmode.getItemAt(i).toString().equalsIgnoreCase(busmode)) {
                comboBusmode.setSelectedIndex(i);
                break;
            }                
        }

        cbSimulation.setSelected(prefs.getBoolean("simulation", false));
        cbEnableSrcp.setSelected(prefs.getBoolean("enableSRCP", false));
        cbEnableSxnet.setSelected(prefs.getBoolean("enableSxnet", false));
        cbEnableLanbahn.setSelected(prefs.getBoolean("enableLanbahn", false));
        cbDebug.setSelected(prefs.getBoolean("enableDebug", false));
 
        comboSXBusControl.setSelectedIndex(prefs.getInt("sxbusControl", 0));
  
       // if (DEBUG) { System.out.println("type="+comboSelectType.getSelectedItem().toString()); }
        checkBusMode();
   
        loadPrefs();

        setVisible(true);
    }



    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        comboSelectSerialPort = new javax.swing.JComboBox<>();
        cbBaudrate = new javax.swing.JComboBox();
        lblSerial = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboSelectType = new javax.swing.JComboBox();
        cbSimulation = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        comboBusmode = new javax.swing.JComboBox();
        comboSXBusControl = new javax.swing.JComboBox();
        lblLoco = new javax.swing.JLabel();
        lblControl = new javax.swing.JLabel();
        lblLocoSX0 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblLocale = new javax.swing.JLabel();
        comboLocale = new javax.swing.JComboBox();
        cbEnableSrcp = new javax.swing.JCheckBox();
        cbDebug = new javax.swing.JCheckBox();
        btnSensorList = new javax.swing.JButton();
        cbEnableSxnet = new javax.swing.JCheckBox();
        cbEnableLanbahn = new javax.swing.JCheckBox();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Einstellungen");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        btnSave.setText("Speichern");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selectrix Interface", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Ubuntu", 0, 15))); // NOI18N

        comboSelectSerialPort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbBaudrate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4800", "9600", "19200", "38400", "57600" }));
        cbBaudrate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBaudrateActionPerformed(evt);
            }
        });

        lblSerial.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lblSerial.setText("Serielle Schnittstelle");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        jLabel2.setText("Type");

        comboSelectType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SLX 825", "Trix 66824", "ZS1", "SLX 852" }));
        comboSelectType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSelectTypeActionPerformed(evt);
            }
        });

        cbSimulation.setText("IF Simulation");
        cbSimulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSimulationActionPerformed(evt);
            }
        });

        jLabel1.setText("baud");

        comboBusmode.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SX", "SX0/SX1" }));
        comboBusmode.setEnabled(false);
        comboBusmode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBusmodeActionPerformed(evt);
            }
        });

        comboSXBusControl.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SX0", "SX1" }));
        comboSXBusControl.setEnabled(false);

        lblLoco.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lblLoco.setText("Fahren");
        lblLoco.setEnabled(false);

        lblControl.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        lblControl.setText("Schalten/Melden");
        lblControl.setEnabled(false);

        lblLocoSX0.setText("SX0");
        lblLocoSX0.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblSerial, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboSelectSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(comboBusmode, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboSelectType, javax.swing.GroupLayout.Alignment.LEADING, 0, 144, Short.MAX_VALUE))
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLoco)
                            .addComponent(lblLocoSX0))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblControl)
                            .addComponent(comboSXBusControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(cbSimulation))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbSimulation)
                    .addComponent(lblSerial))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboSelectSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSelectType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLoco)
                    .addComponent(lblControl))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbBaudrate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(comboBusmode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSXBusControl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLocoSX0))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblLocale.setText("Sprache");

        comboLocale.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "English", "Deutsch" }));
        comboLocale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLocaleActionPerformed(evt);
            }
        });

        cbEnableSrcp.setText("SRCP Server");

        cbDebug.setText("Debug Mode");

        btnSensorList.setText("Belegtm.Liste");
        btnSensorList.setEnabled(false);
        btnSensorList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSensorListActionPerformed(evt);
            }
        });

        cbEnableSxnet.setText("SXNet Server");
        cbEnableSxnet.setActionCommand("SXNET Server");

        cbEnableLanbahn.setText("Enable Lanbahn ");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnSensorList, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLocale)
                            .addComponent(comboLocale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbDebug)
                        .addGap(56, 56, 56)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbEnableSrcp)
                    .addComponent(cbEnableSxnet)
                    .addComponent(cbEnableLanbahn))
                .addGap(47, 47, 47))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblLocale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboLocale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEnableSrcp)
                            .addComponent(cbDebug))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbEnableSxnet)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(btnSensorList)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbEnableLanbahn)
                        .addContainerGap(24, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 137, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
       
        prefs.put("type", comboSelectType.getSelectedItem().toString());
        prefs.put("busmode", comboBusmode.getSelectedItem().toString());
        prefs.put("baudrate", cbBaudrate.getSelectedItem().toString());
        prefs.putBoolean("simulation", cbSimulation.isSelected());
        prefs.putBoolean("enableSRCP", cbEnableSrcp.isSelected());
        prefs.putBoolean("enableSxnet", cbEnableSxnet.isSelected());
        prefs.putBoolean("enableLanbahn", cbEnableLanbahn.isSelected());
        prefs.putBoolean("enableDebug", cbDebug.isSelected());

        prefs.putInt("sxbusControl",comboSXBusControl.getSelectedIndex());
        prefs.put("locale", comboLocale.getSelectedItem().toString());
        
        if (comboSelectSerialPort.getItemCount() >= 1) {
            prefs.put("commPort", comboSelectSerialPort.getSelectedItem().toString());
        } else {
            prefs.put("commPort","");
            prefs.putBoolean("simulation", true); // without serial port only simulation is possible
        }
         
         if (DEBUG) {
        System.out.println("saving Settings");
        System.out.println("saving Port="+comboSelectSerialPort.getSelectedItem().toString());
        System.out.println("saving Baudrate="+cbBaudrate.getSelectedItem().toString());
        System.out.println("saving Type="+comboSelectType.getSelectedItem().toString());
        System.out.println("saving Busmode="+comboBusmode.getSelectedItem().toString());
        System.out.println("saving sxbusControl="+comboSXBusControl.getSelectedIndex());
        System.out.println("saving Simulation="+cbSimulation.isSelected());
        System.out.println("saving enableSRCP="+cbEnableSrcp.isSelected());
        System.out.println("saving enableSxnet="+cbEnableSxnet.isSelected());
        System.out.println("saving enableLanbahn="+cbEnableLanbahn.isSelected());
        System.out.println("saving enableDebug="+cbDebug.isSelected());
        System.out.println("saving locale="+comboLocale.getSelectedItem().toString());
        }

        JOptionPane.showMessageDialog(this,bundle.getString("NeedsRestart"));
        settingsWindow = null;
        dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        settingsWindow = null;
        dispose();

    }//GEN-LAST:event_btnCancelActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        settingsWindow = null;
    }//GEN-LAST:event_formWindowClosing

    private void cbSimulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSimulationActionPerformed
    }//GEN-LAST:event_cbSimulationActionPerformed

    private void comboLocaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLocaleActionPerformed
        int sel = comboLocale.getSelectedIndex();
        Locale loc;
        if (sel == 0) {
            loc = Locale.ENGLISH;
        } else {
            loc = Locale.GERMAN;
        }

	bundle = ResourceBundle.getBundle("resources", loc);
	i18n();

    }//GEN-LAST:event_comboLocaleActionPerformed

    private void btnSensorListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSensorListActionPerformed
        new EditSensorListUI(this, true);
    }//GEN-LAST:event_btnSensorListActionPerformed

    private void cbBaudrateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBaudrateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbBaudrateActionPerformed

    private void comboBusmodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBusmodeActionPerformed
        //  if (DEBUG) System.out.println("comboBusmodeAction");
         //if (DEBUG) { System.out.println("setting bus control from combuBusmodeActionPerformed ==SX"); }
         checkBusMode();
    }//GEN-LAST:event_comboBusmodeActionPerformed

    private void comboSelectTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSelectTypeActionPerformed
        // set enable busmode selection accordingly.
        //System.out.println("combo type action - selected="+comboSelectType.getSelectedItem().toString());
        // if (DEBUG) { System.out.println("calling buscontrol from comboSelectTypeAction"); }
        checkBusMode();
    }//GEN-LAST:event_comboSelectTypeActionPerformed

    private void checkBusMode() {
        //if (DEBUG) { System.out.println("check bus control");}
        if ( (comboSelectType.getSelectedItem().toString().equalsIgnoreCase("ZS1")) || 
             (comboSelectType.getSelectedItem().toString().equalsIgnoreCase("ZS2")) ||
             (comboSelectType.getSelectedItem().toString().equalsIgnoreCase("SLX 852"))   ) {
            // enable selection of bus mode for these interfaces
            comboBusmode.setEnabled(true); 
        } else {
            comboBusmode.setSelectedIndex(0);  //  always == "SX" for other interfaces
            comboBusmode.setEnabled(false); 
        }
        if (comboBusmode.getSelectedItem().toString().equalsIgnoreCase("SX")) {
            comboSXBusControl.setEnabled(false);
            comboSXBusControl.setSelectedIndex(0);
            lblLoco.setEnabled(false);
            lblLocoSX0.setEnabled(false);
            lblControl.setEnabled(false);

        } else {
            comboSXBusControl.setEnabled(true);
            lblLoco.setEnabled(true);
            lblLocoSX0.setEnabled(true);
            lblControl.setEnabled(true);
        }
        // check if sensor list must be enabled 
        if (comboSelectType.getSelectedItem().toString().contains("66824")) {
            // the sensor list is necessary only for polling
            btnSensorList.setEnabled(true);
        } else {
            btnSensorList.setEnabled(false);
        }
    }
    private void i18n() {
        this.setTitle(bundle.getString("Settings"));
        lblLocale.setText(bundle.getString("Locale"));
	lblSerial.setText(bundle.getString("SelSerial"));
	cbEnableSrcp.setText(bundle.getString("EnSRCP"));
        cbEnableSxnet.setText(bundle.getString("EnSxnet"));
        btnSave.setText(bundle.getString("SaveSettings"));
        btnCancel.setText(bundle.getString("Cancel"));

    }

    private void loadPrefs() {
        prefs.getInt("Sett.windowX", getX());
        prefs.getInt("Sett.windowY", getY());
        String l = prefs.get("locale","Deutsch");
        if (l.contains("Deu")) {
            comboLocale.setSelectedIndex(1);
        } else {
             comboLocale.setSelectedIndex(0);
        }
    }

    private void savePrefs() {
        prefs.putInt("Sett.windowX", getX());
        prefs.putInt("Sett.windowY", getY());
    }

    public void refreshSerialPortList() {
        if (DEBUG) System.out.println("refreshing serial port list");

        int count = 0;
        CommPortIdentifier serialPortId;
        Enumeration enumComm;
        comboSelectSerialPort.removeAllItems();

        enumComm = CommPortIdentifier.getPortIdentifiers();
        while (enumComm.hasMoreElements()) {
            serialPortId = (CommPortIdentifier) enumComm.nextElement();
            if (serialPortId.getPortType() == CommPortIdentifier.PORT_SERIAL) {
                if (DEBUG) System.out.println("Port Found:" + serialPortId.getName()+" index="+count);
                comboSelectSerialPort.addItem(serialPortId.getName());
                count++;
            }
        }

        String commPortPref = prefs.get("commPort", "");
        for (int i=0; i<comboSelectSerialPort.getItemCount();i++) {
            if (comboSelectSerialPort.getItemAt(i).toString().equalsIgnoreCase(commPortPref)) {
                comboSelectSerialPort.setSelectedIndex(i);
                break;
            }
        }


   
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSensorList;
    private javax.swing.JComboBox cbBaudrate;
    private javax.swing.JCheckBox cbDebug;
    private javax.swing.JCheckBox cbEnableLanbahn;
    private javax.swing.JCheckBox cbEnableSrcp;
    private javax.swing.JCheckBox cbEnableSxnet;
    private javax.swing.JCheckBox cbSimulation;
    private javax.swing.JComboBox comboBusmode;
    private javax.swing.JComboBox comboLocale;
    private javax.swing.JComboBox comboSXBusControl;
    private javax.swing.JComboBox<String> comboSelectSerialPort;
    private javax.swing.JComboBox comboSelectType;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblControl;
    private javax.swing.JLabel lblLocale;
    private javax.swing.JLabel lblLoco;
    private javax.swing.JLabel lblLocoSX0;
    private javax.swing.JLabel lblSerial;
    // End of variables declaration//GEN-END:variables

}
